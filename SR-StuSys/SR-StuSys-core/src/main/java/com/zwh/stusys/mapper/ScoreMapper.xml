<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zwh.stusys.mapper.ScoreMapper">
  <resultMap id="BaseResultMap" type="com.zwh.stusys.entity.Score">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sid" jdbcType="VARCHAR" property="sid" />
    <result column="courseid" jdbcType="VARCHAR" property="courseid" />
    <result column="score" jdbcType="DOUBLE" property="score" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.zwh.stusys.entity.Score">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sid" jdbcType="VARCHAR" property="sid" />
    <result column="courseid" jdbcType="VARCHAR" property="courseid" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <association property="student" javaType="com.zwh.stusys.entity.Student" column="sid" select="com.zwh.stusys.mapper.StudentMapper.selectByTrueKey"></association>
  	<association property="course" javaType="com.zwh.stusys.entity.Course" column="courseid" select="com.zwh.stusys.mapper.CourseMapper.selectByTrueKey"></association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sid, courseid, score
  </sql>
  <select id="selectByExample" parameterType="com.zwh.stusys.entity.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap2">
    select 
    <include refid="Base_Column_List" />
    from score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zwh.stusys.entity.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zwh.stusys.entity.Score">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into score (sid, courseid, score
      )
    values (#{sid,jdbcType=VARCHAR}, #{courseid,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zwh.stusys.entity.Score">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zwh.stusys.entity.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="searchAllScorePage" parameterType="map" resultMap="BaseResultMap2">
  select
  <include refid="Base_Column_List" />
  from score
  <where>
  	<if test="score!=null and score.courseid!=null and score.courseid!=''">
  		courseid = #{score.courseid}
  	</if>
  	<if test="score!=null and score.sid!=null and score.sid!=''">
  		and sid = #{score.sid}
  	</if>
  </where>
  limit #{start},#{length}
  </select>
  
  <select id="searchCount" parameterType="com.zwh.stusys.entity.Score" resultType="int">
  	select count(id) from score
  	<where>
  		<if test="courseid!=null and courseid!=''">
  			courseid = #{courseid}
  		</if>
  		<if test="sid!=null and sid!=''">
  			and sid = #{sid}
  		</if>
  	</where>
  </select>
  
  <select id="searchAllScoreBytid" parameterType="com.zwh.stusys.entity.Teach" resultMap="BaseResultMap2">
  SELECT score.*
  FROM score,teach,student
  <where>
  teach.classid = student.classid AND teach.courseid = score.courseid AND student.sid = score.sid
  <if test="tid!=null and tid!=''">
  	 and teach.tid = #{tid}
  </if>
  <if test="classid!=null and classid!='' and classid!=0">
 	 and teach.classid = #{classid}
  </if>
  <if test="courseid!=null and courseid!='' and courseid!=0">
 	 and teach.courseid = #{courseid}
  </if>
  </where>
  </select>
  
  <select id="searchAllScorePageBytid" parameterType="map" resultMap="BaseResultMap2">
  SELECT score.*
  FROM score,teach,student
  <where>
  teach.classid = student.classid AND teach.courseid = score.courseid AND student.sid = score.sid
  <if test="teach!=null">
  	<if test="teach.tid!=null and teach.tid!=''">
  		and teach.tid = #{teach.tid}
  	</if>
  	<if test="teach.classid!=null and teach.classid!='' and teach.classid!=0">
 	 	and teach.classid = #{teach.classid}
 	 </if>
 	 <if test="teach.courseid!=null and teach.courseid!='' and teach.courseid!=0">
 	 	and teach.courseid = #{teach.courseid}
 	 </if>
  </if>
  </where>
  limit #{start},#{length}
  </select>
  
  <select id="searchCountBytid" parameterType="com.zwh.stusys.entity.Teach" resultType="int">
  SELECT count(score.id)
  FROM score,teach,student
  <where>
  teach.classid = student.classid AND teach.courseid = score.courseid AND student.sid = score.sid
  	<if test="tid!=null and tid!=''">
  		and teach.tid = #{tid}
  	</if>
  	<if test="classid!=null and classid!='' and classid!=0">
 	 	and teach.classid = #{classid}
 	</if>
 	<if test="courseid!=null and courseid!='' and courseid!=0">
 	 	and teach.courseid = #{courseid}
 	</if>
  </where>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set id = #{record.id,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=VARCHAR},
      courseid = #{record.courseid,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwh.stusys.entity.Score">
    update score
    <set>
      <if test="sid != null">
        sid = #{sid,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwh.stusys.entity.Score">
    update score
    set sid = #{sid,jdbcType=VARCHAR},
      courseid = #{courseid,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>