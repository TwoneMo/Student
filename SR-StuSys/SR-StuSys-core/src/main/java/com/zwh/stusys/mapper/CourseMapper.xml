<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zwh.stusys.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.zwh.stusys.entity.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="courseid" jdbcType="VARCHAR" property="courseid" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, courseid, cname, score, credit
  </sql>
  <select id="selectByExample" parameterType="com.zwh.stusys.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByTrueKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where courseid = #{courseid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zwh.stusys.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zwh.stusys.entity.Course">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course (courseid, cname, score, 
      credit)
    values (#{courseid,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
      #{credit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zwh.stusys.entity.Course">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        courseid,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="credit != null">
        credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zwh.stusys.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="searchAllCoursePage" parameterType="map" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from course
  <where>
  	<if test="course!=null and course.cname!=null and course.cname!=''">
  		cname like '%${course.cname}%'
  	</if>
  	<if test="course!=null and course.courseid!=null and course.courseid!=''">
  		courseid = #{course.courseid}
  	</if>
  	<if test="course!=null and course.credit!=null and course.credit!=''">
  		credit = #{course.credit}
  	</if>
  </where>
  limit #{start},#{length}
  </select>
  
  <select id="searchCount" parameterType="com.zwh.stusys.entity.Course" resultType="int">
  	select count(id) from course
  	<where>
  		<if test="cname!=null and cname!=''">
  			cname like '%${cname}%'
  		</if>
  		<if test="courseid!=null and courseid!=''">
  			courseid = #{courseid}
  		</if>
  		<if test="credit!=null and credit!=''">
  			credit = #{credit}
  		</if>
  	</where>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=INTEGER},
      courseid = #{record.courseid,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwh.stusys.entity.Course">
    update course
    <set>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwh.stusys.entity.Course">
    update course
    set courseid = #{courseid,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      credit = #{credit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>